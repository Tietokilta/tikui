{"version":3,"file":"Button.stories-87b1b562.js","sources":["../../node_modules/class-variance-authority/dist/index.mjs","../../lib/components/Button/index.tsx"],"sourcesContent":["import { clsx } from \"clsx\";\nconst falsyToString = (value)=>typeof value === \"boolean\" ? \"\".concat(value) : value === 0 ? \"0\" : value;\nexport const cx = clsx;\nexport const cva = (base, config)=>{\n    return (props)=>{\n        var ref;\n        if ((config === null || config === void 0 ? void 0 : config.variants) == null) return cx(base, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n        const { variants , defaultVariants  } = config;\n        const getVariantClassNames = Object.keys(variants).map((variant)=>{\n            const variantProp = props === null || props === void 0 ? void 0 : props[variant];\n            const defaultVariantProp = defaultVariants === null || defaultVariants === void 0 ? void 0 : defaultVariants[variant];\n            if (variantProp === null) return null;\n            const variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);\n            return variants[variant][variantKey];\n        });\n        const propsWithoutUndefined = props && Object.entries(props).reduce((acc, param)=>{\n            let [key, value] = param;\n            if (value === undefined) {\n                return acc;\n            }\n            acc[key] = value;\n            return acc;\n        }, {});\n        const getCompoundVariantClassNames = config === null || config === void 0 ? void 0 : (ref = config.compoundVariants) === null || ref === void 0 ? void 0 : ref.reduce((acc, param1)=>{\n            let { class: cvClass , className: cvClassName , ...compoundVariantOptions } = param1;\n            return Object.entries(compoundVariantOptions).every((param)=>{\n                let [key, value] = param;\n                return Array.isArray(value) ? value.includes({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                }[key]) : ({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                })[key] === value;\n            }) ? [\n                ...acc,\n                cvClass,\n                cvClassName\n            ] : acc;\n        }, []);\n        return cx(base, getVariantClassNames, getCompoundVariantClassNames, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n    };\n};\n\n\n//# sourceMappingURL=index.mjs.map","import { cva, type VariantProps } from \"class-variance-authority\";\n\nconst button = cva(\n  [\"py-2\", \"px-3\", \"rounded-sm\", \"font-semibold\", \"tracking-wider\", \"whitespace-nowrap\"],\n  {\n    variants: {\n      action: {\n        primary: [\"text-white\", \"bg-orange-400\"],\n        secondary: [\"text-orange-400\", \"outline\", \"outline-1\", \"outline-orange-400\"],\n        tertiary: [\"text-orange-400\"]\n      },\n      destructive: {\n        true: \"\"\n      }\n    },\n    compoundVariants: [\n      {\n        action: \"primary\",\n        destructive: true,\n        className: \"bg-red-500\"\n      },\n      {\n        action: \"secondary\",\n        destructive: true,\n        className: \"text-red-500 outline-none outline-transparent\"\n      },\n      {\n        action: \"tertiary\",\n        destructive: true,\n        className: \"text-slate-500\"\n      }\n    ],\n    defaultVariants: {\n      action: \"primary\",\n      destructive: false\n    }\n  }\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof button> {}\n\nconst Button = ({ action, destructive, className, ...props }: ButtonProps) => (\n  <button className={button({ action, destructive, className })} {...props} />\n);\n\nexport default Button;\n"],"names":["falsyToString","value","cx","clsx","cva","base","config","props","ref","variants","defaultVariants","getVariantClassNames","variant","variantProp","defaultVariantProp","variantKey","propsWithoutUndefined","acc","param","key","getCompoundVariantClassNames","param1","cvClass","cvClassName","compoundVariantOptions","button","Button","action","destructive","className","jsx","Button$1"],"mappings":"iHACA,MAAMA,EAAiBC,GAAQ,OAAOA,GAAU,UAAY,GAAG,OAAOA,CAAK,EAAIA,IAAU,EAAI,IAAMA,EACtFC,EAAKC,EACLC,EAAM,CAACC,EAAMC,IACdC,GAAQ,CACZ,IAAIC,EACJ,IAAKF,GAAW,KAA4B,OAASA,EAAO,WAAa,KAAM,OAAOJ,EAAGG,EAAME,GAAU,KAA2B,OAASA,EAAM,MAAOA,GAAU,KAA2B,OAASA,EAAM,SAAS,EACvN,KAAM,CAAE,SAAAE,EAAW,gBAAAC,CAAkB,EAAGJ,EAClCK,EAAuB,OAAO,KAAKF,CAAQ,EAAE,IAAKG,GAAU,CAC9D,MAAMC,EAAcN,GAAU,KAA2B,OAASA,EAAMK,CAAO,EACzEE,EAAqBJ,GAAoB,KAAqC,OAASA,EAAgBE,CAAO,EACpH,GAAIC,IAAgB,KAAM,OAAO,KACjC,MAAME,EAAaf,EAAca,CAAW,GAAKb,EAAcc,CAAkB,EACjF,OAAOL,EAASG,CAAO,EAAEG,CAAU,CAC/C,CAAS,EACKC,EAAwBT,GAAS,OAAO,QAAQA,CAAK,EAAE,OAAO,CAACU,EAAKC,IAAQ,CAC9E,GAAI,CAACC,EAAKlB,CAAK,EAAIiB,EACnB,OAAIjB,IAAU,SAGdgB,EAAIE,CAAG,EAAIlB,GACJgB,CACV,EAAE,CAAE,CAAA,EACCG,EAA+Bd,GAAW,OAAsCE,EAAMF,EAAO,oBAAsB,MAAQE,IAAQ,OAA7D,OAA+EA,EAAI,OAAO,CAACS,EAAKI,IAAS,CACjL,GAAI,CAAE,MAAOC,EAAU,UAAWC,EAAc,GAAGC,CAAwB,EAAGH,EAC9E,OAAO,OAAO,QAAQG,CAAsB,EAAE,MAAON,GAAQ,CACzD,GAAI,CAACC,EAAKlB,CAAK,EAAIiB,EACnB,OAAO,MAAM,QAAQjB,CAAK,EAAIA,EAAM,SAAS,CACzC,GAAGS,EACH,GAAGM,CACvB,EAAkBG,CAAG,CAAC,EAAK,CACP,GAAGT,EACH,GAAGM,CACvB,EAAmBG,CAAG,IAAMlB,CAC5B,CAAa,EAAI,CACD,GAAGgB,EACHK,EACAC,CACH,EAAGN,CACP,EAAE,CAAE,CAAA,EACL,OAAOf,EAAGG,EAAMM,EAAsBS,EAA8Bb,GAAU,KAA2B,OAASA,EAAM,MAAOA,GAAU,KAA2B,OAASA,EAAM,SAAS,CACpM,ECvCAkB,EAAArB,EAAe,CAAA,OAAA,OAAA,aAAA,gBAAA,iBAAA,mBAAA,EACwE,CACrF,SAAA,CACY,OAAA,CACA,QAAA,CAAA,aAAA,eAAA,EACiC,UAAA,CAAA,kBAAA,UAAA,YAAA,oBAAA,EACoC,SAAA,CAAA,iBAAA,CAC/C,EAC9B,YAAA,CACa,KAAA,EACL,CACR,EACF,iBAAA,CACkB,CAChB,OAAA,UACU,YAAA,GACK,UAAA,YACF,EACb,CACA,OAAA,YACU,YAAA,GACK,UAAA,+CACF,EACb,CACA,OAAA,WACU,YAAA,GACK,UAAA,gBACF,CACb,EACF,gBAAA,CACiB,OAAA,UACP,YAAA,EACK,CACf,CAEJ,EAMAsB,EAAA,CAAA,CAAA,OAAAC,EAAA,YAAAC,EAAA,UAAAC,EAAA,GAAAtB,CAAA,IAAAuB,EAAAA,IAAA,SAAA,CAAA,UAAAL,EAAA,CAAA,OAAAE,EAAA,YAAAC,EAAA,UAAAC,CAAA,CAAA,EAAA,GAAAtB,CAAA,CAAA,EAIAwB,EAAAL","x_google_ignoreList":[0]}